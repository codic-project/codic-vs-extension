<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.10.0"
                    xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.10.0">


    <Style TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{x:Static shell:VsBrushes.BackgroundKey}" />
    </Style>
    
    <!--
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}" />
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowContentTabGradientBeginKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowTextKey}}"/>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Background="{DynamicResource {x:Static shell:VsBrushes.ScrollBarThumbMouseOverBackgroundKey}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Width" Value="5" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border Opacity="0.5" Background="Gray" Width="7">
                        <Grid SnapsToDevicePixels="true">
                            <Track Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}"
                                   IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand"
                                                  Style="{StaticResource ScrollBarPageButton}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand"
                                                  Style="{StaticResource ScrollBarPageButton}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" />

    <Style TargetType="Border">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowBorderKey}}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowBackgroundKey}}" />
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="Transparent" StrokeThickness="0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarTextActiveKey}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMouseOverBackgroundBeginKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarTextHoverKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMouseDownBackgroundBeginKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarTextInactiveKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Fill"
                        Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Path">
        <Setter Property="Fill" Value="{DynamicResource {x:Static shell:VsBrushes.ToolWindowButtonActiveGlyphKey}}" />
    </Style>

    <Style x:Key="SplitButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarTextActiveKey}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="1,0,0,0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2"
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter
                            Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                        <Path Name="Glyph" Grid.Column="1" Data="M0,0L507.176,384.017 0,768z"
                              Stretch="Uniform" Width="7" Height="8" SnapsToDevicePixels="True" Opacity="0"
                              VerticalAlignment="Top" Margin="0,6,0,0" HorizontalAlignment="Center"
                              Fill="{DynamicResource {x:Static shell:VsBrushes.CommandBarMenuSubmenuGlyphKey}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger
                            Binding="{Binding IsMouseOver,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                            Value="True">
                            <Setter Property="Opacity" TargetName="Glyph" Value="0.6" />
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarShadowKey}}" />
                        </DataTrigger>
                        <DataTrigger
                            Binding="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                            Value="True">
                            <Setter Property="Opacity" TargetName="Glyph" Value="1" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition
                                    Binding="{Binding IsSelected,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                    Value="True" />
                                <Condition
                                    Binding="{Binding ContextMenu.IsOpen,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                    Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="Glyph"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMenuMouseOverSubmenuGlyphKey}}" />
                            <Setter Property="Opacity" TargetName="Glyph" Value="1" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMouseOverBackgroundBeginKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarTextHoverKey}}" />
                            <Setter Property="Opacity" TargetName="Glyph" Value="1" />
                            <Setter Property="Fill" TargetName="Glyph"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMenuMouseOverSubmenuGlyphKey}}" />
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarShadowKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMouseDownBackgroundBeginKey}}" />
                            <Setter Property="Opacity" TargetName="Glyph" Value="1" />
                            <Setter Property="Fill" TargetName="Glyph"
                                    Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMenuSubmenuGlyphKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TranslationListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template" Value="{DynamicResource TranslationListBoxItemControlTemplate}" />
    </Style>

    <ControlTemplate x:Key="TranslationListBoxItemControlTemplate" TargetType="{x:Type ListBoxItem}">
        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd"
                        Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMouseOverBackgroundBeginKey}}" />
                <Setter Property="BorderBrush" TargetName="Bd"
                        Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMouseOverBackgroundBeginKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd"
                        Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarMouseOverBackgroundBeginKey}}" />
                <Setter Property="BorderBrush" TargetName="Bd"
                        Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarSelectedBorderKey}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd"
                        Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarSelectedBorderKey}}" />
                <Setter Property="BorderBrush" TargetName="Bd"
                        Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarSelectedBorderKey}}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="Bd"
                        Value="{DynamicResource {x:Static shell:VsBrushes.CommandBarTextInactiveKey}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
        
        -->

</ResourceDictionary>